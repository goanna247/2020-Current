# Azure is great for testing our projects before we merge them into the main code.
# It's a good idea to have all checks acheived before merging.
# And if not acheived, you can see where you went wrong.

# I added a few more test cases. I don't expect all of them to be there during build season
# just testing what works and what doesn't.

# we don't need a trigger. because we want it to trigger for every branch
trigger: 
- master

resources:
  containers:
  - container: linux_jaci #Jaci's Linux, from (https://github.com/JacisNonsense/azure-native-linux)
    image: jaci/azure-native-linux:2018.12.06
  - container: wpilib2019
    image: wpilib/roborio-cross-ubuntu:2019-18.04
  - container: raspbian
    image:  wpilib/raspbian-cross-ubuntu:18.04

jobs:

- job: windows_VS2017_Win2016
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - template: azure-init.yml
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean build'
      options: '-Pno-roborio'

- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - template: azure-init.yml
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean build'
      options: '-Pno-roborio'

- job: linux16
  pool: 
    vmImage: 'Ubuntu-16.04'
  container: linux_jaci
  steps:
  - script: sudo apt-get install -y libusb-1.0-0-dev
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean build'
      options: '-Pno-roborio'

- job: roborio_linux16
  pool: 
    vmImage: 'Ubuntu-16.04'
  container: wpilib2019
  steps:
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean build'
      options: '-Pno-desktop -xcheck -x:4788:src:coprocessor:build'

- job: pi_vision_linux16
  pool: 
    vmImage: 'Ubuntu-16.04'
  container: raspbian
  steps:
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean :4788:src:coprocessor:build'
      options: '-Pno-roborio -Pno-desktop -xcheck'

- job: tinkerboard_vision_linux16
  pool:
    vmImage: 'Ubuntu-16.04'
  container: linux_jaci
  steps:
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      tasks: ':4788:src:coprocessor:installTinkerboardToolchain'
      options: '-Pno-roborio -Pno-desktop --scan --stacktrace'
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'clean :4788:src:coprocessor:build'
      options: '-Pno-roborio -Pno-desktop -xcheck'

- job: doxygen_linux16
  pool:
    vmImage: 'Ubuntu-16.04'
  container: linux_jaci
  steps:
  - script: git submodule update --init
  - script: git submodule update
  - task: Gradle@2
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      tasks: 'doxygen'
      options: '-Pno-roborio'
  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: 'doxygen'
      pathtoPublish: build/docs/doxygen/html
